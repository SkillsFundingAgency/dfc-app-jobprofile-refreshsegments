{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceDomain": {
      "type": "string"
    },
    "appSharedResourceGroup": {
      "type": "string"
    },
    "appSharedServiceBusName": {
      "type": "string"
    },
    "appSharedStorageAccountName": {
      "type": "string"
    },
    "functionAppName": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "sharedAppServicePlanName": {
      "type": "string",
      "defaultValue": ""
    },
    "sharedAppServicePlanResourceGroup": {
      "type": "string",
      "defaultValue": ""
    },
    "refreshTopicName": {
      "type": "string",
      "defaultValue": "job-profile-refresh",
      "metadata": {
        "description": "Name of job profile refresh topic"
      }
    },
    "enableAlerts": {
      "type": "bool",
      "metadata": {
        "description": "Enable or disable alerting"
      }
    },
    "ExceptionCountThreshold": {
      "type": "string"
    },
    "workspaceName": {
      "type": "string"
    },
    "workspaceResourceGroup": {
      "type": "string"
    }
  },
    "variables": {
        "appServicePlanName": "[if(greater(length(parameters('sharedAppServicePlanName')), 0), parameters('sharedAppServicePlanName'), concat(variables('resourcePrefix'), '-asp'))]",
        "appServicePlanResourceGroup": "[if(greater(length(parameters('SharedAppServicePlanResourceGroup')), 0), parameters('SharedAppServicePlanResourceGroup'), resourceGroup().name)]",
        "buildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
        "resourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-app-jobprof-refseg'))]",
        "functionAppInsightsName": "[concat(parameters('functionAppName'), '-ai')]",
        "refreshSubscriptionName": "job-profile-segment-refresh",
        "ActionGroupName": "[concat('dfc-', replace(tolower(parameters('Environment')), '-draft', ''), '-app-sharedresources-actgrp')]"
    },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('functionAppInsightsName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('functionAppInsightsName')]"
          },
          "attachedService": {
            "value": ""
          },
          "workspaceName": {
            "value": "[parameters('workspaceName')]"
          },
          "workspaceResourceGroup": {
            "value": "[parameters('workspaceResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[parameters('functionAppName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[parameters('functionAppName')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[variables('appServicePlanResourceGroup')]"
          },
          "appServiceType": {
            "value": "functionapp"
          },
          "deployStagingSlot": {
            "value": true
          },
          "clientAffinity": {
            "value": false
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~4"
              },
              {
                "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                "value": "1"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "dotnet"
              },
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "1"
              },
              {
                "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                "value": false
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(variables('functionAppInsightsName')).outputs.InstrumentationKey.value]"
              },
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('appSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
              },
              {
                "name": "service-bus-connection-string",
                "value": "[listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.ServiceBus/namespaces/authorizationRules', parameters('appSharedServiceBusName'), 'ReadWrite'), '2017-04-01').primaryConnectionString]"
              },
              {
                "name": "job-profiles-refresh-topic",
                "value": "[parameters('refreshTopicName')]"
              },
              {
                "name": "job-profiles-refresh-subscription",
                "value": "[variables('refreshSubscriptionName')]"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[variables('functionAppInsightsName')]"
      ]
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('functionAppInsightsName'), '-metric-exceptions')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[variables('functionAppInsightsName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "alertName": {
            "value": "[concat(variables('functionAppInsightsName'), '-metric-exceptions')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "exceptions/count"
          },
          "operator": {
            "value": "GreaterThan"
          },
          "threshold": {
            "value": "[parameters('ExceptionCountThreshold')]"
          },
          "aggregation": {
            "value": "Count"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[parameters('appSharedResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Insights/Components', variables('functionAppInsightsName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('functionAppInsightsName'), '-failure-anomaly-v2')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[variables('functionAppInsightsName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/failure-anomaly-rule.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "alertName": {
            "value": "[concat(variables('functionAppInsightsName'), '-failure-anomaly-v2')]"
          },
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Insights/Components', variables('functionAppInsightsName'))]"
          },
          "actionGroupId": {
            "value": "[resourceId(parameters('appSharedResourceGroup'), 'microsoft.insights/actionGroups', variables('ActionGroupName'))]"
          }
        }
      }

    }
  ],
    "outputs": {
    }
}